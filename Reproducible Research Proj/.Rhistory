library(swirl)
swirl()
ones <- rep(1, nrow(galton))
ones
swirl()
lm(child ~ ones + parent -1, galton)
lm(child ~ parent, galton)
lm(child ~ 1, galtoN)
lm(child ~ 1, galton)
View(trees)
fit <- lim(Volume ~ Girth + Height -1, trees)
fit <- lm(Volume ~ Girth + Height -1, trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
View(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~ agriculture, swiss)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
cor(Examination ~ Education, swiss)
cor(Examination, Education, swiss)
?cor
cor(swiss$Examination, cor$educa)
cor(swiss$Examination, cor$Education)
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec(sum(swiss$Examination, swiss$Catholic))
ec <- sum(swiss$Examination, swiss$Catholic)
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
summary(fit)$coef - summary(efit)$coef
coef(fit) - coef(efit)
coef(all) - coef(efit)
all$coefficients - efit$coefficients
# Chunk 1
act <- read.csv("activity.csv")
# Chunk 2
library(ggplot2)
library(plyr)
library(dplyr)
byday <- tapply(act$steps, act$date, sum)
byday <- ldply(byday)
names(byday) <- c("day", "steps")
qplot(byday$steps, xlab = "steps", bins = 7, na.rm = TRUE, color = I("white"))
# Chunk 3
mean(byday$steps, na.rm = TRUE)
median(byday$steps, na.rm = TRUE)
# Chunk 4
cleanact <- subset(act, !is.na(act$steps))
averages <- tapply(cleanact$steps, cleanact$interval, mean)
dfaverage <- ldply(averages)
names(dfaverage) <- c("interval", "steps")
plot(dfaverage$interval, dfaverage$steps, type = "l", xlab = "interval", ylab = "steps")
# Chunk 5
head(arrange(dfaverage, desc(steps)),5)
# Chunk 6
length(subset(act$steps, is.na(act$steps)))
# Chunk 7
missing <- act[is.na(act$steps),]
imputed <- merge(missing, dfaverage, by = "interval")
imputed <- imputed[,c(4, 3, 1)]
names(imputed) <- c("steps", "date", "interval")
act[is.na(act$steps),] <- imputed
# Chunk 8
byday2 <- tapply(act$steps, act$date, sum)
byday2 <- ldply(byday2)
names(byday2) <- c("day", "steps")
qplot(byday2$steps, xlab = "steps", bins = 7, color = I("white"))
# Chunk 9
##The mean and median increases when replacing N/As
mean(byday2$steps)
median(byday2$steps)
# Chunk 10
act$date <- strptime(act$date, format = "%Y-%m-%d")
act <- transform(act, date = weekdays(date))
act <- mutate(act, splitweek=ifelse(date %in% c("Monday","Tuesday","Wednesday","Thursday","Friday"), "Weekday","Weekend"))
act$splitweek <- as.factor(act$splitweek)
dataforplot <- act %>%
group_by(interval, splitweek) %>%
summarize(avg = mean(steps))
with(dataforplot, qplot(interval, avg, facets = (. ~ splitweek), geom = "smooth"))
setwd("C:/Users/dbrow/datasciencecoursera/Reproducible Research Proj")
# Chunk 1
act <- read.csv("activity.csv")
# Chunk 2
library(ggplot2)
library(plyr)
library(dplyr)
byday <- tapply(act$steps, act$date, sum)
byday <- ldply(byday)
names(byday) <- c("day", "steps")
qplot(byday$steps, xlab = "steps", bins = 7, na.rm = TRUE, color = I("white"))
# Chunk 3
mean(byday$steps, na.rm = TRUE)
median(byday$steps, na.rm = TRUE)
# Chunk 4
cleanact <- subset(act, !is.na(act$steps))
averages <- tapply(cleanact$steps, cleanact$interval, mean)
dfaverage <- ldply(averages)
names(dfaverage) <- c("interval", "steps")
plot(dfaverage$interval, dfaverage$steps, type = "l", xlab = "interval", ylab = "steps")
# Chunk 5
head(arrange(dfaverage, desc(steps)),5)
# Chunk 6
length(subset(act$steps, is.na(act$steps)))
# Chunk 7
missing <- act[is.na(act$steps),]
imputed <- merge(missing, dfaverage, by = "interval")
imputed <- imputed[,c(4, 3, 1)]
names(imputed) <- c("steps", "date", "interval")
act[is.na(act$steps),] <- imputed
# Chunk 8
byday2 <- tapply(act$steps, act$date, sum)
byday2 <- ldply(byday2)
names(byday2) <- c("day", "steps")
qplot(byday2$steps, xlab = "steps", bins = 7, color = I("white"))
# Chunk 9
##The mean and median increases when replacing N/As
mean(byday2$steps)
median(byday2$steps)
# Chunk 10
act$date <- strptime(act$date, format = "%Y-%m-%d")
act <- transform(act, date = weekdays(date))
act <- mutate(act, splitweek=ifelse(date %in% c("Monday","Tuesday","Wednesday","Thursday","Friday"), "Weekday","Weekend"))
act$splitweek <- as.factor(act$splitweek)
dataforplot <- act %>%
group_by(interval, splitweek) %>%
summarize(avg = mean(steps))
with(dataforplot, qplot(interval, avg, facets = (. ~ splitweek), geom = "smooth"))
View(dataforplot)
with(dataforplot, qplot(interval, avg, facets = (. ~ splitweek), geom = "line"))
with(dataforplot, qplot(interval, avg, facets = (. ~ splitweek), geom = "point"))
with(dataforplot, plot(interval, avg, facets = (. ~ splitweek)))
with(dataforplot, plot(interval, avg, type = "l")
)
act$date <- strptime(act$date, format = "%Y-%m-%d")
act <- transform(act, date = weekdays(date))
act <- mutate(act, splitweek=ifelse(date %in% c("Monday","Tuesday","Wednesday","Thursday","Friday"), "Weekday","Weekend"))
act$splitweek <- as.factor(act$splitweek)
dataforplot <- act %>%
group_by(interval, splitweek) %>%
summarize(avg = mean(steps))
with(dataforplot, qplot(interval, avg, facets = (. ~ splitweek), geom = "smooth"))
act$date <- strptime(act$date, format = "%Y-%m-%d")
act <- transform(act, date = weekdays(date))
act <- mutate(act, splitweek=ifelse(date %in% c("Monday","Tuesday","Wednesday","Thursday","Friday"), "Weekday","Weekend"))
act$splitweek <- as.factor(act$splitweek)
dataforplot <- act %>%
group_by(interval, splitweek) %>%
summarize(avg = mean(steps))
with(dataforplot, qplot(interval, avg, facets = (. ~ splitweek), geom = "smooth"))
head(dataforplot)
# Chunk 1
act <- read.csv("activity.csv")
# Chunk 2
library(ggplot2)
library(plyr)
library(dplyr)
byday <- tapply(act$steps, act$date, sum)
byday <- ldply(byday)
names(byday) <- c("day", "steps")
qplot(byday$steps, xlab = "steps", bins = 7, na.rm = TRUE, color = I("white"))
# Chunk 3
mean(byday$steps, na.rm = TRUE)
median(byday$steps, na.rm = TRUE)
# Chunk 4
cleanact <- subset(act, !is.na(act$steps))
averages <- tapply(cleanact$steps, cleanact$interval, mean)
dfaverage <- ldply(averages)
names(dfaverage) <- c("interval", "steps")
plot(dfaverage$interval, dfaverage$steps, type = "l", xlab = "interval", ylab = "steps")
# Chunk 5
head(arrange(dfaverage, desc(steps)),5)
# Chunk 6
length(subset(act$steps, is.na(act$steps)))
# Chunk 7
missing <- act[is.na(act$steps),]
imputed <- merge(missing, dfaverage, by = "interval")
imputed <- imputed[,c(4, 3, 1)]
names(imputed) <- c("steps", "date", "interval")
act[is.na(act$steps),] <- imputed
# Chunk 8
byday2 <- tapply(act$steps, act$date, sum)
byday2 <- ldply(byday2)
names(byday2) <- c("day", "steps")
qplot(byday2$steps, xlab = "steps", bins = 7, color = I("white"))
# Chunk 9
##The mean and median increases when replacing N/As
mean(byday2$steps)
median(byday2$steps)
# Chunk 10
act$date <- strptime(act$date, format = "%Y-%m-%d")
act <- transform(act, date = weekdays(date))
act <- mutate(act, splitweek=ifelse(date %in% c("Monday","Tuesday","Wednesday","Thursday","Friday"), "Weekday","Weekend"))
act$splitweek <- as.factor(act$splitweek)
dataforplot <- act %>%
group_by(interval, splitweek) %>%
summarize(avg = mean(steps))
with(dataforplot, qplot(interval, avg, facets = (. ~ splitweek), geom = "smooth"))
# Chunk 1
act <- read.csv("activity.csv")
# Chunk 2
library(ggplot2)
library(plyr)
library(dplyr)
byday <- tapply(act$steps, act$date, sum)
byday <- ldply(byday)
names(byday) <- c("day", "steps")
qplot(byday$steps, xlab = "steps", bins = 7, na.rm = TRUE, color = I("white"))
# Chunk 3
mean(byday$steps, na.rm = TRUE)
median(byday$steps, na.rm = TRUE)
# Chunk 4
cleanact <- subset(act, !is.na(act$steps))
averages <- tapply(cleanact$steps, cleanact$interval, mean)
dfaverage <- ldply(averages)
names(dfaverage) <- c("interval", "steps")
plot(dfaverage$interval, dfaverage$steps, type = "l", xlab = "interval", ylab = "steps")
# Chunk 5
head(arrange(dfaverage, desc(steps)),5)
# Chunk 6
length(subset(act$steps, is.na(act$steps)))
# Chunk 7
missing <- act[is.na(act$steps),]
imputed <- merge(missing, dfaverage, by = "interval")
imputed <- imputed[,c(4, 3, 1)]
names(imputed) <- c("steps", "date", "interval")
act[is.na(act$steps),] <- imputed
# Chunk 8
byday2 <- tapply(act$steps, act$date, sum)
byday2 <- ldply(byday2)
names(byday2) <- c("day", "steps")
qplot(byday2$steps, xlab = "steps", bins = 7, color = I("white"))
# Chunk 9
##The mean and median increases when replacing N/As
mean(byday2$steps)
median(byday2$steps)
# Chunk 10
act$date <- strptime(act$date, format = "%Y-%m-%d")
act <- transform(act, date = weekdays(date))
act <- mutate(act, splitweek=ifelse(date %in% c("Monday","Tuesday","Wednesday","Thursday","Friday"), "Weekday","Weekend"))
act$splitweek <- as.factor(act$splitweek)
dataforplot <- act %>%
group_by(interval, splitweek) %>%
summarize(avg = mean(steps))
with(dataforplot, qplot(interval, avg, facets = (. ~ splitweek), geom = "point"))
with(dataforplot, qplot(interval, avg, facets = (splitweek ~ .), geom = "point"))
with(dataforplot, qplot(interval, avg, facets = (splitweek ~ .), geom = "line"))
with(dataforplot, qplot(interval, avg, facets = (splitweek ~ .), geom = "bar"))
with(dataforplot, qplot(interval, avg, facets = (splitweek ~ .), geom = "barplot"))
with(dataforplot, qplot(interval, avg, facets = (splitweek ~ .), geom = "smooth"))
